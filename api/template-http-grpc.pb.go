// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/EricTusk/template-http-grpc/pb/template-http-grpc.proto

package api // import "github.com/EricTusk/template-http-grpc/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EchoInfo struct {
	// 数值.
	// [EN] Number to be printed.
	Number float32 `protobuf:"fixed32,1,opt,name=number,proto3" json:"number,omitempty"`
	// 字符串.
	// [EN] Sentence to be printed.
	Sentence             string   `protobuf:"bytes,2,opt,name=sentence,proto3" json:"sentence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoInfo) Reset()         { *m = EchoInfo{} }
func (m *EchoInfo) String() string { return proto.CompactTextString(m) }
func (*EchoInfo) ProtoMessage()    {}
func (*EchoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_http_grpc_90e9bae1d8a08c69, []int{0}
}
func (m *EchoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoInfo.Unmarshal(m, b)
}
func (m *EchoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoInfo.Marshal(b, m, deterministic)
}
func (dst *EchoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoInfo.Merge(dst, src)
}
func (m *EchoInfo) XXX_Size() int {
	return xxx_messageInfo_EchoInfo.Size(m)
}
func (m *EchoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EchoInfo proto.InternalMessageInfo

func (m *EchoInfo) GetNumber() float32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *EchoInfo) GetSentence() string {
	if m != nil {
		return m.Sentence
	}
	return ""
}

type EchoRequest struct {
	// 要被打印的参数.
	// [EN] Parameters to be printed.
	Echo                 *EchoInfo `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_http_grpc_90e9bae1d8a08c69, []int{1}
}
func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (dst *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(dst, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetEcho() *EchoInfo {
	if m != nil {
		return m.Echo
	}
	return nil
}

type EchoResponse struct {
	// 上一次打印的参数.
	// [EN] Last printed parameters.
	LastEcho *EchoInfo `protobuf:"bytes,1,opt,name=last_echo,json=lastEcho,proto3" json:"last_echo,omitempty"`
	// 当前打印的参数.
	// [EN] Current printed parameters.
	CurrentEcho          *EchoInfo `protobuf:"bytes,2,opt,name=current_echo,json=currentEcho,proto3" json:"current_echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_http_grpc_90e9bae1d8a08c69, []int{2}
}
func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (dst *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(dst, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetLastEcho() *EchoInfo {
	if m != nil {
		return m.LastEcho
	}
	return nil
}

func (m *EchoResponse) GetCurrentEcho() *EchoInfo {
	if m != nil {
		return m.CurrentEcho
	}
	return nil
}

// GetSystemInfoRequest表示获取系统信息请求.
// [EN] GetSystemInfoRequest indicates a getting system information request.
type GetSystemInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSystemInfoRequest) Reset()         { *m = GetSystemInfoRequest{} }
func (m *GetSystemInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetSystemInfoRequest) ProtoMessage()    {}
func (*GetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_http_grpc_90e9bae1d8a08c69, []int{3}
}
func (m *GetSystemInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemInfoRequest.Unmarshal(m, b)
}
func (m *GetSystemInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetSystemInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemInfoRequest.Merge(dst, src)
}
func (m *GetSystemInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetSystemInfoRequest.Size(m)
}
func (m *GetSystemInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemInfoRequest proto.InternalMessageInfo

// GetSystemInfoResponse表示获取系统信息响应.
// [EN] GetSystemInfoResponse indicates a getting system information response.
type GetSystemInfoResponse struct {
	// 信息.
	// [EN] Info.
	Info                 string   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSystemInfoResponse) Reset()         { *m = GetSystemInfoResponse{} }
func (m *GetSystemInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetSystemInfoResponse) ProtoMessage()    {}
func (*GetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_template_http_grpc_90e9bae1d8a08c69, []int{4}
}
func (m *GetSystemInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemInfoResponse.Unmarshal(m, b)
}
func (m *GetSystemInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetSystemInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemInfoResponse.Merge(dst, src)
}
func (m *GetSystemInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetSystemInfoResponse.Size(m)
}
func (m *GetSystemInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemInfoResponse proto.InternalMessageInfo

func (m *GetSystemInfoResponse) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoInfo)(nil), "com.EricTusk.template_http_grpc.EchoInfo")
	proto.RegisterType((*EchoRequest)(nil), "com.EricTusk.template_http_grpc.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "com.EricTusk.template_http_grpc.EchoResponse")
	proto.RegisterType((*GetSystemInfoRequest)(nil), "com.EricTusk.template_http_grpc.GetSystemInfoRequest")
	proto.RegisterType((*GetSystemInfoResponse)(nil), "com.EricTusk.template_http_grpc.GetSystemInfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TemplateHTTPGRPCServiceClient is the client API for TemplateHTTPGRPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TemplateHTTPGRPCServiceClient interface {
	// 根据传入的参数进行配置更新.
	// [EN] The configuration is updated according to the parameters.
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	// 获取状态信息.
	// [EN] Get status information.
	GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*GetSystemInfoResponse, error)
}

type templateHTTPGRPCServiceClient struct {
	cc *grpc.ClientConn
}

func NewTemplateHTTPGRPCServiceClient(cc *grpc.ClientConn) TemplateHTTPGRPCServiceClient {
	return &templateHTTPGRPCServiceClient{cc}
}

func (c *templateHTTPGRPCServiceClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/com.EricTusk.template_http_grpc.TemplateHTTPGRPCService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateHTTPGRPCServiceClient) GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*GetSystemInfoResponse, error) {
	out := new(GetSystemInfoResponse)
	err := c.cc.Invoke(ctx, "/com.EricTusk.template_http_grpc.TemplateHTTPGRPCService/GetSystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TemplateHTTPGRPCServiceServer is the server API for TemplateHTTPGRPCService service.
type TemplateHTTPGRPCServiceServer interface {
	// 根据传入的参数进行配置更新.
	// [EN] The configuration is updated according to the parameters.
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
	// 获取状态信息.
	// [EN] Get status information.
	GetSystemInfo(context.Context, *GetSystemInfoRequest) (*GetSystemInfoResponse, error)
}

func RegisterTemplateHTTPGRPCServiceServer(s *grpc.Server, srv TemplateHTTPGRPCServiceServer) {
	s.RegisterService(&_TemplateHTTPGRPCService_serviceDesc, srv)
}

func _TemplateHTTPGRPCService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateHTTPGRPCServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.EricTusk.template_http_grpc.TemplateHTTPGRPCService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateHTTPGRPCServiceServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateHTTPGRPCService_GetSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateHTTPGRPCServiceServer).GetSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.EricTusk.template_http_grpc.TemplateHTTPGRPCService/GetSystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateHTTPGRPCServiceServer).GetSystemInfo(ctx, req.(*GetSystemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TemplateHTTPGRPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.EricTusk.template_http_grpc.TemplateHTTPGRPCService",
	HandlerType: (*TemplateHTTPGRPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _TemplateHTTPGRPCService_Echo_Handler,
		},
		{
			MethodName: "GetSystemInfo",
			Handler:    _TemplateHTTPGRPCService_GetSystemInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/EricTusk/template-http-grpc/pb/template-http-grpc.proto",
}

func init() {
	proto.RegisterFile("github.com/EricTusk/template-http-grpc/pb/template-http-grpc.proto", fileDescriptor_template_http_grpc_90e9bae1d8a08c69)
}

var fileDescriptor_template_http_grpc_90e9bae1d8a08c69 = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xad, 0x28, 0x4a, 0x26, 0xed, 0x65, 0x4b, 0x4b, 0x65, 0x2a, 0xa8, 0x7c, 0x2a, 0xa5,
	0xf6, 0xb6, 0x41, 0x70, 0x40, 0x02, 0x89, 0xa2, 0x52, 0x90, 0x7a, 0xa8, 0xdc, 0x9c, 0xb8, 0x58,
	0xce, 0x6a, 0xba, 0xb6, 0x88, 0x77, 0x97, 0xdd, 0x75, 0x80, 0x2b, 0x9f, 0x00, 0x47, 0xae, 0xfc,
	0x00, 0xdf, 0xc2, 0x2f, 0xf0, 0x21, 0x68, 0xd7, 0x0e, 0x12, 0xb4, 0x52, 0xd2, 0x9e, 0xec, 0x99,
	0x7d, 0xef, 0xcd, 0x7b, 0x23, 0x0d, 0x1c, 0xf3, 0xca, 0x96, 0xcd, 0x34, 0x65, 0xb2, 0xa6, 0x27,
	0xba, 0x62, 0x93, 0xc6, 0xbc, 0xa7, 0x16, 0x6b, 0x35, 0x2b, 0x2c, 0x26, 0xa5, 0xb5, 0x2a, 0xe1,
	0x5a, 0x31, 0xaa, 0xa6, 0xd7, 0x74, 0x53, 0xa5, 0xa5, 0x95, 0xe4, 0x01, 0x93, 0x75, 0xba, 0x20,
	0xa7, 0x0b, 0x58, 0xee, 0x60, 0xb9, 0x83, 0x45, 0x3b, 0x5c, 0x4a, 0x3e, 0x43, 0x5a, 0xa8, 0x8a,
	0x16, 0x42, 0x48, 0x5b, 0xd8, 0x4a, 0x0a, 0xd3, 0xd2, 0xa3, 0x03, 0xff, 0x61, 0x09, 0x47, 0x91,
	0x98, 0x8f, 0x05, 0xe7, 0xa8, 0xa9, 0x54, 0x1e, 0x71, 0x15, 0x1d, 0xbf, 0x80, 0xc1, 0x09, 0x2b,
	0xe5, 0x5b, 0x71, 0x29, 0xc9, 0x16, 0xf4, 0x45, 0x53, 0x4f, 0x51, 0x6f, 0x07, 0xbb, 0xc1, 0x5e,
	0x98, 0x75, 0x15, 0x89, 0x60, 0x60, 0x50, 0x58, 0x14, 0x0c, 0xb7, 0xc3, 0xdd, 0x60, 0x6f, 0x98,
	0xfd, 0xad, 0xe3, 0x33, 0x18, 0x39, 0x7e, 0x86, 0x1f, 0x1a, 0x34, 0x96, 0x3c, 0x87, 0x1e, 0xb2,
	0x52, 0x7a, 0x81, 0xd1, 0xf8, 0x61, 0xba, 0x24, 0x4a, 0xba, 0x98, 0x9d, 0x79, 0x5a, 0xfc, 0x23,
	0x80, 0xb5, 0x56, 0xce, 0x28, 0x29, 0x0c, 0x92, 0xd7, 0x30, 0x9c, 0x15, 0xc6, 0xe6, 0xb7, 0x13,
	0x1d, 0x38, 0xae, 0xab, 0xc8, 0x19, 0xac, 0xb1, 0x46, 0x6b, 0x14, 0x9d, 0x54, 0x78, 0x53, 0xa9,
	0x51, 0x47, 0x77, 0x8d, 0x78, 0x0b, 0xee, 0x9c, 0xa2, 0xbd, 0xf8, 0x6c, 0x2c, 0xd6, 0xfe, 0xb5,
	0x4d, 0x1f, 0x3f, 0x82, 0xcd, 0xff, 0xfa, 0x5d, 0x0c, 0x02, 0xbd, 0x4a, 0x5c, 0xb6, 0x09, 0x86,
	0x99, 0xff, 0x1f, 0xff, 0x0c, 0xe1, 0xee, 0xa4, 0x9b, 0xf8, 0x66, 0x32, 0x39, 0x3f, 0xcd, 0xce,
	0x5f, 0x5d, 0xa0, 0x9e, 0x57, 0x0c, 0xc9, 0x27, 0xe8, 0x79, 0xdb, 0x07, 0x2b, 0x19, 0xec, 0xc6,
	0x47, 0xc9, 0x8a, 0xe8, 0xd6, 0x54, 0xbc, 0xf1, 0xe5, 0xd7, 0xef, 0x6f, 0xe1, 0x7a, 0x3c, 0xa0,
	0xf3, 0x23, 0xea, 0xb6, 0xf2, 0x2c, 0xd8, 0x27, 0xdf, 0x03, 0x58, 0xff, 0x27, 0x03, 0x79, 0xb2,
	0x54, 0xf5, 0xba, 0x5d, 0x44, 0x4f, 0x6f, 0x4a, 0xeb, 0x5c, 0xdd, 0xf3, 0xae, 0x36, 0xc9, 0x86,
	0x73, 0xc5, 0xd1, 0xe6, 0xc6, 0x63, 0x72, 0xb7, 0xb3, 0x63, 0xf1, 0xf5, 0xe5, 0x7d, 0xb2, 0x03,
	0xe4, 0xea, 0xed, 0x8c, 0xfb, 0xf3, 0xc3, 0xf4, 0x28, 0x3d, 0x84, 0x65, 0xd7, 0xf3, 0x6e, 0x7f,
	0xc5, 0x13, 0x2d, 0x54, 0x35, 0xed, 0xfb, 0x23, 0x79, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0xcb,
	0x95, 0x65, 0xc3, 0xd7, 0x03, 0x00, 0x00,
}
